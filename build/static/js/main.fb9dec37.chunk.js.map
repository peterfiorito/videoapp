{"version":3,"sources":["modules/counter.js","modules/index.js","store.js","containers/allVideos/index.js","containers/home/index.js","containers/app/index.js","index.js"],"names":["initialState","hasError","combineReducers","counter","state","arguments","length","undefined","type","Object","objectSpread","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","AllVideos","payload","this","props","vidchange","_this","videoList","videos","map","video","react_default","a","createElement","className","key","id","name","onClick","changeVid","bind","url","React","Component","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","route","videoHistory","videoName","artistName","lastRoute","ended","updateVidData","assertThisInitialized","temp","slice","avoidDuplicateVideoName","setState","push","array","error","x","indexOf","event","update","target","value","defineProperty","player","continousPlaying","len","copyPlaylist","nextVid","tracker","refs","play","subscribeToStateChange","handleStateChange","_this2","htmlFor","onChange","addVideo","video_react_lib","ref","playsInline","autoPlay","src","position","allVideos","updateFromPlaylist","App","Route","exact","path","component","document","querySelector","render","es","store","lib","app"],"mappings":"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","file":"static/js/main.fb9dec37.chunk.js","sourcesContent":["export const HAS_ERROR = 'counter/HAS_ERROR'\nexport const HAS_ERROR_SET = 'counter/HAS_ERROR_SET'\n\nconst initialState = {\n  hasError: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case HAS_ERROR:\n      return {\n        ...state,\n        hasError: true\n      }\n    default:\n      return state\n  }\n}\n\nexport const hasError = () => {\n  return dispatch => {\n    dispatch({\n      type: HAS_ERROR_SET\n    })\n\n    dispatch({\n      type: HAS_ERROR\n    })\n  }\n}","import { combineReducers } from 'redux'\nimport counter from './counter'\n\nexport default combineReducers({\n  counter\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React from 'react'\n\nclass AllVideos extends React.Component {\n  changeVid(payload){\n    this.props.vidchange(payload)\n  }\n  render(){\n  let videoList = this.props.videos.map((video)=>{\n    return <li className=\"video-list__item\" key={video.id}> \n            {video.id}, {video.name}\n          <button\n            className=\"video-list__button\"\n            onClick={this.changeVid.bind(this,video.url)}>\n            <span className=\"video-list__button--text\">\n              Play\n              <em className=\"fas fa-play\"/>\n            </span>\n          </button>\n          </li>\n  })\n  return (<div>\n    <h4>Playlist</h4>\n    <ul className=\"video-list\">{videoList}</ul>\n  </div>)\n  }\n}\nexport default AllVideos\n","import React from 'react'\nimport AllVideos from '../allVideos'\nimport { Player, BigPlayButton } from 'video-react';\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      route: '',\n      videoHistory: [],\n      videoName: '',\n      artistName: '',\n      lastRoute: '',\n      ended: false,\n      hasError: false\n    }\n    this.updateVidData = this.updateVidData.bind(this);\n  }\n  addVideo() {\n    // replace state with full new object\n    let temp = this.state.videoHistory.slice()\n    // quick checkup, avoid dups on videoname, as id is used for tracking\n    let check = this.avoidDuplicateVideoName(temp)\n    // if check comes positive, debounce and avoid saving video to list\n    if (check) {\n      this.setState(() =>({\n        hasError: true\n      }))\n      return\n    }\n    // if name is not duplicated, continue with pushing video to the playlist\n    this.setState(() =>({ hasError: false }))\n    temp.push({id: this.state.videoName, name: this.state.artistName, url: this.state.lastRoute})\n    // And reset state to empty\n    this.setState(() =>({\n      videoHistory: temp,\n      artistName: '',\n      videoName: '',\n      lastRoute:''\n    }))\n  }\n  avoidDuplicateVideoName(array) {\n    let copy = array.map((x)=>{return x.id})\n    let checkId = copy.indexOf(this.state.videoName)\n    let error\n    if(checkId !== -1){\n      error = true\n    }\n    return error\n  }\n  updateVidData(event){\n    let update = event.target.value\n    let name = event.target.name;\n    if(name === 'route'){\n      this.setState(()=>({\n        lastRoute: update\n      }))}\n    this.setState(()=>({\n      [name]: update\n    }))\n  }\n  updateFromPlaylist(video) {\n    this.setState(()=>({\n      route: video\n    }))\n  }\n  handleStateChange(state) {\n    this.setState({player: state, ended: state.ended})\n    if(this.state.ended){\n      this.continousPlaying()\n    }\n  }\n  computeUrls(){\n    if(this.state.videoHistory.length < 1){\n      return this.state.route\n    }\n    let len = this.state.videoHistory.length - 1\n    return this.state.videoHistory[len].url\n  }\n  continousPlaying() {\n    let copyPlaylist = this.state.videoHistory.slice()\n    if(copyPlaylist.length < 2){\n      return\n    }\n    let urls = copyPlaylist.map((x)=>{return x.url})\n    let tracker = urls.indexOf(this.state.route)\n    let nextVid\n    (tracker + 1) < copyPlaylist.length ? nextVid = tracker + 1 : nextVid = 0\n    this.setState({route: copyPlaylist[nextVid].url, ended: false})\n    this.refs.player.play()\n  }\n  componentDidMount() {\n    // suscribe to player state changes\n    this.refs.player.subscribeToStateChange(this.handleStateChange.bind(this))\n  }\n  render(){\n  return (<div>\n    {/* Add your video inputs */}\n    <div className=\"add-video\">\n      <h1 className=\"app-title\">Add videos to your playlist</h1>\n      <div className=\"add-video__row\">\n        <div className=\"add-video__column\">\n          <label className=\"add-video__label\" htmlFor=\"route\">Video file</label>\n          <input type=\"url\" name=\"route\" value={this.state.lastRoute} onChange={this.updateVidData.bind(this)}/>\n        </div>\n        <div className=\"add-video__column\">\n          <label className=\"add-video__label\" htmlFor=\"artistname\">Artist name</label>\n          <input\n            type=\"text\" \n            id=\"artistname\" \n            name=\"artistName\" \n            value={this.state.artistName} \n            onChange={this.updateVidData.bind(this)}/>\n        </div>\n        <div className=\"add-video__column\">\n          <label className=\"add-video__label\" htmlFor=\"videoname\">Video name</label>\n          <input\n            type=\"text\" \n            name=\"videoName\" \n            id=\"videoname\"\n            value={this.state.videoName}\n            className={this.state.hasError ? 'error-field' : null}\n            onChange={this.updateVidData.bind(this)}/>\n          {this.state.hasError && <span className=\"error\">Avoid duplicate names!</span>}\n        </div>\n        <button\n          className=\"add-btn\"\n          onClick={() => {this.addVideo()}}>\n          <span>Add Video!</span>\n        </button>\n      </div>\n    </div>\n    {/* Player and playlist block */}\n    <div className=\"wrapper\">\n      <div className=\"player\">\n        <Player\n          ref=\"player\"\n          playsInline\n          autoPlay\n          src={this.state.route}>\n          <BigPlayButton position=\"center\" />\n        </Player>\n      </div>\n      <div className=\"playlist\">\n        <AllVideos videos={this.state.videoHistory} vidchange = {this.updateFromPlaylist.bind(this)}/>\n      </div>\n    </div>\n    {/* Player and playlist end block */}\n  </div>)\n  }\n}\nexport default Home\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n      <Route exact path=\"/\" component={Home} />\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\nimport \"../node_modules/video-react/dist/video-react.css\"\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}