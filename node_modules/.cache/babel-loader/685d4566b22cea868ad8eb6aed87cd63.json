{"ast":null,"code":"import _objectSpread from \"/Users/pedrofiorito/Documents/xite/create-react-app-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var HAS_ERROR = 'counter/HAS_ERROR';\nexport var HAS_ERROR_SET = 'counter/HAS_ERROR_SET';\nvar initialState = {\n  hasError: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HAS_ERROR:\n      return _objectSpread({}, state, {\n        hasError: true\n      });\n\n    default:\n      return state;\n  }\n});\nexport var hasError = function hasError() {\n  return function (dispatch) {\n    dispatch({\n      type: HAS_ERROR_SET\n    });\n    dispatch({\n      type: HAS_ERROR\n    });\n  };\n};","map":{"version":3,"sources":["/Users/pedrofiorito/Documents/xite/create-react-app-redux/src/modules/counter.js"],"names":["HAS_ERROR","HAS_ERROR_SET","initialState","hasError","state","action","type","dispatch"],"mappings":";AAAA,OAAO,IAAMA,SAAS,GAAG,mBAAlB;AACP,OAAO,IAAMC,aAAa,GAAG,uBAAtB;AAEP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,SAAL;AACE,+BACKI,KADL;AAEED,QAAAA,QAAQ,EAAE;AAFZ;;AAIF;AACE,aAAOC,KAAP;AAPJ;AASD,CAVD;AAYA,OAAO,IAAMD,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAO,UAAAI,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPD,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAIAM,IAAAA,QAAQ,CAAC;AACPD,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD,GARD;AASD,CAVM","sourcesContent":["export const HAS_ERROR = 'counter/HAS_ERROR'\nexport const HAS_ERROR_SET = 'counter/HAS_ERROR_SET'\n\nconst initialState = {\n  hasError: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case HAS_ERROR:\n      return {\n        ...state,\n        hasError: true\n      }\n    default:\n      return state\n  }\n}\n\nexport const hasError = () => {\n  return dispatch => {\n    dispatch({\n      type: HAS_ERROR_SET\n    })\n\n    dispatch({\n      type: HAS_ERROR\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}