{"ast":null,"code":"import _defineProperty from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pedrofiorito/Documents/xite/video-player-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pedrofiorito/Documents/xite/video-player-app/src/containers/home/index.js\";\nimport React from 'react';\nimport AllVideos from '../allVideos';\nimport { Player, BigPlayButton } from 'video-react';\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      route: '',\n      videoHistory: [],\n      videoName: '',\n      artistName: '',\n      lastRoute: '',\n      ended: false,\n      hasError: false\n    };\n    _this.updateVidData = _this.updateVidData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"addVideo\",\n    value: function addVideo() {\n      // replace state with full new object\n      var temp = this.state.videoHistory.slice(); // quick checkup, avoid dups on videoname, as id is used for tracking\n\n      var check = this.avoidDuplicateVideoName(temp); // if check comes positive, debounce and avoid saving video to list\n\n      if (check) {\n        this.setState(function () {\n          return {\n            hasError: true\n          };\n        });\n        return;\n      } // if name is not duplicated, continue with pushing video to the playlist\n\n\n      this.setState(function () {\n        return {\n          hasError: false\n        };\n      });\n      temp.push({\n        id: this.state.videoName,\n        name: this.state.artistName,\n        url: this.state.lastRoute\n      }); // And reset state to empty\n\n      this.setState(function () {\n        return {\n          videoHistory: temp,\n          artistName: '',\n          videoName: '',\n          lastRoute: ''\n        };\n      });\n    }\n  }, {\n    key: \"avoidDuplicateVideoName\",\n    value: function avoidDuplicateVideoName(array) {\n      /* checks the provided array, by mapping it's items ids\n        (video name) and checking if the name is already used */\n      var copy = array.map(function (x) {\n        return x.id;\n      });\n      var checkId = copy.indexOf(this.state.videoName);\n      var error;\n\n      if (checkId !== -1) {\n        error = true;\n      }\n\n      return error;\n    }\n  }, {\n    key: \"updateVidData\",\n    value: function updateVidData(event) {\n      var update = event.target.value;\n      var name = event.target.name;\n\n      if (name === 'route') {\n        this.setState(function () {\n          return {\n            lastRoute: update\n          };\n        });\n      }\n\n      this.setState(function () {\n        return _defineProperty({}, name, update);\n      });\n    }\n  }, {\n    key: \"updateFromPlaylist\",\n    value: function updateFromPlaylist(video) {\n      this.setState(function () {\n        return {\n          route: video\n        };\n      });\n    }\n  }, {\n    key: \"handleStateChange\",\n    value: function handleStateChange(state) {\n      /* registered on component Mount. Handle state changes\n        if the current video has ended, call continues playing */\n      this.setState({\n        player: state,\n        ended: state.ended\n      });\n\n      if (this.state.ended) {\n        this.continousPlaying();\n      }\n    }\n  }, {\n    key: \"computeUrls\",\n    value: function computeUrls() {\n      if (this.state.videoHistory.length < 1) {\n        return this.state.route;\n      }\n\n      var len = this.state.videoHistory.length - 1;\n      return this.state.videoHistory[len].url;\n    }\n  }, {\n    key: \"continousPlaying\",\n    value: function continousPlaying() {\n      var copyPlaylist = this.state.videoHistory.slice();\n\n      if (copyPlaylist.length < 2) {\n        return;\n      } // Map current playlist videos url and get current position\n\n\n      var urls = copyPlaylist.map(function (x) {\n        return x.url;\n      });\n      var tracker = urls.indexOf(this.state.route); // Determine next video index, get it's url and play it\n\n      var nextVid;\n      tracker + 1 < copyPlaylist.length ? nextVid = tracker + 1 : nextVid = 0;\n      this.setState({\n        route: copyPlaylist[nextVid].url,\n        ended: false\n      });\n      this.refs.player.play();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // suscribe to player state changes\n      this.refs.player.subscribeToStateChange(this.handleStateChange.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"app-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Add videos to your playlist\"), React.createElement(\"div\", {\n        className: \"add-video__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-video__column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"add-video__label\",\n        htmlFor: \"route\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Video file\"), React.createElement(\"input\", {\n        type: \"url\",\n        name: \"route\",\n        value: this.state.lastRoute,\n        onChange: this.updateVidData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"add-video__column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"add-video__label\",\n        htmlFor: \"artistname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Artist name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"artistname\",\n        name: \"artistName\",\n        value: this.state.artistName,\n        onChange: this.updateVidData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"add-video__column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"add-video__label\",\n        htmlFor: \"videoname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Video name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"videoName\",\n        id: \"videoname\",\n        value: this.state.videoName,\n        className: this.state.hasError ? 'error-field' : null,\n        onChange: this.updateVidData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), this.state.hasError && React.createElement(\"span\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Avoid duplicate names!\")), React.createElement(\"button\", {\n        className: \"add-btn\",\n        onClick: function onClick() {\n          _this2.addVideo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Add Video!\")))), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Player, {\n        ref: \"player\",\n        playsInline: true,\n        autoPlay: true,\n        src: this.state.route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(BigPlayButton, {\n        position: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(AllVideos, {\n        videos: this.state.videoHistory,\n        vidchange: this.updateFromPlaylist.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/pedrofiorito/Documents/xite/video-player-app/src/containers/home/index.js"],"names":["React","AllVideos","Player","BigPlayButton","Home","props","state","route","videoHistory","videoName","artistName","lastRoute","ended","hasError","updateVidData","bind","temp","slice","check","avoidDuplicateVideoName","setState","push","id","name","url","array","copy","map","x","checkId","indexOf","error","event","update","target","value","video","player","continousPlaying","length","len","copyPlaylist","urls","tracker","nextVid","refs","play","subscribeToStateChange","handleStateChange","addVideo","updateFromPlaylist","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AllVideos from '../allVideos'\nimport { Player, BigPlayButton } from 'video-react';\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      route: '',\n      videoHistory: [],\n      videoName: '',\n      artistName: '',\n      lastRoute: '',\n      ended: false,\n      hasError: false\n    }\n    this.updateVidData = this.updateVidData.bind(this);\n  }\n  addVideo() {\n    // replace state with full new object\n    let temp = this.state.videoHistory.slice()\n    // quick checkup, avoid dups on videoname, as id is used for tracking\n    let check = this.avoidDuplicateVideoName(temp)\n    // if check comes positive, debounce and avoid saving video to list\n    if (check) {\n      this.setState(() =>({\n        hasError: true\n      }))\n      return\n    }\n    // if name is not duplicated, continue with pushing video to the playlist\n    this.setState(() =>({ hasError: false }))\n    temp.push({id: this.state.videoName, name: this.state.artistName, url: this.state.lastRoute})\n    // And reset state to empty\n    this.setState(() =>({\n      videoHistory: temp,\n      artistName: '',\n      videoName: '',\n      lastRoute:''\n    }))\n  }\n  avoidDuplicateVideoName(array) {\n    /* checks the provided array, by mapping it's items ids\n      (video name) and checking if the name is already used */\n    let copy = array.map((x)=>{return x.id})\n    let checkId = copy.indexOf(this.state.videoName)\n    let error\n    if(checkId !== -1){\n      error = true\n    }\n    return error\n  }\n  updateVidData(event){\n    let update = event.target.value\n    let name = event.target.name;\n    if(name === 'route'){\n      this.setState(()=>({\n        lastRoute: update\n      }))}\n    this.setState(()=>({\n      [name]: update\n    }))\n  }\n  updateFromPlaylist(video) {\n    this.setState(()=>({\n      route: video\n    }))\n  }\n  handleStateChange(state) {\n    /* registered on component Mount. Handle state changes\n      if the current video has ended, call continues playing */\n    this.setState({player: state, ended: state.ended})\n    if(this.state.ended){\n      this.continousPlaying()\n    }\n  }\n  computeUrls(){\n    if(this.state.videoHistory.length < 1){\n      return this.state.route\n    }\n    let len = this.state.videoHistory.length - 1\n    return this.state.videoHistory[len].url\n  }\n  continousPlaying() {\n    let copyPlaylist = this.state.videoHistory.slice()\n    if(copyPlaylist.length < 2){\n      return\n    }\n    // Map current playlist videos url and get current position\n    let urls = copyPlaylist.map((x)=>{return x.url})\n    let tracker = urls.indexOf(this.state.route)\n    // Determine next video index, get it's url and play it\n    let nextVid\n    (tracker + 1) < copyPlaylist.length ? nextVid = tracker + 1 : nextVid = 0\n    this.setState({route: copyPlaylist[nextVid].url, ended: false})\n    this.refs.player.play()\n  }\n  componentDidMount() {\n    // suscribe to player state changes\n    this.refs.player.subscribeToStateChange(this.handleStateChange.bind(this))\n  }\n  render(){\n  return (<div>\n    {/* Add your video inputs */}\n    <div className=\"add-video\">\n      <h1 className=\"app-title\">Add videos to your playlist</h1>\n      <div className=\"add-video__row\">\n        <div className=\"add-video__column\">\n          <label className=\"add-video__label\" htmlFor=\"route\">Video file</label>\n          <input type=\"url\" name=\"route\" value={this.state.lastRoute} onChange={this.updateVidData.bind(this)}/>\n        </div>\n        <div className=\"add-video__column\">\n          <label className=\"add-video__label\" htmlFor=\"artistname\">Artist name</label>\n          <input\n            type=\"text\" \n            id=\"artistname\" \n            name=\"artistName\" \n            value={this.state.artistName} \n            onChange={this.updateVidData.bind(this)}/>\n        </div>\n        <div className=\"add-video__column\">\n          <label className=\"add-video__label\" htmlFor=\"videoname\">Video name</label>\n          <input\n            type=\"text\" \n            name=\"videoName\" \n            id=\"videoname\"\n            value={this.state.videoName}\n            className={this.state.hasError ? 'error-field' : null}\n            onChange={this.updateVidData.bind(this)}/>\n          {this.state.hasError && <span className=\"error\">Avoid duplicate names!</span>}\n        </div>\n        <button\n          className=\"add-btn\"\n          onClick={() => {this.addVideo()}}>\n          <span>Add Video!</span>\n        </button>\n      </div>\n    </div>\n    {/* Player and playlist block */}\n    <div className=\"wrapper\">\n      <div className=\"player\">\n        <Player\n          ref=\"player\"\n          playsInline\n          autoPlay\n          src={this.state.route}>\n          <BigPlayButton position=\"center\" />\n        </Player>\n      </div>\n      <div className=\"playlist\">\n        <AllVideos videos={this.state.videoHistory} vidchange = {this.updateFromPlaylist.bind(this)}/>\n      </div>\n    </div>\n    {/* Player and playlist end block */}\n  </div>)\n  }\n}\nexport default Home\n"]},"metadata":{},"sourceType":"module"}